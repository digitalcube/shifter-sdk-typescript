/**
 * Shifter API
 * Shifter API
 *
 * OpenAPI spec version: latest
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { SubscriptionGetResponseItemsPlanMetadata } from './SubscriptionGetResponseItemsPlanMetadata';
import { SubscriptionGetResponseItemsPlanTiers } from './SubscriptionGetResponseItemsPlanTiers';
import { SubscriptionGetResponseItemsPlanTransformUsage } from './SubscriptionGetResponseItemsPlanTransformUsage';
import { HttpFile } from '../http/http';

export class SubscriptionGetResponseItemsPlan {
  'id'?: string;
  'object'?: string;
  'active'?: boolean;
  'aggregateUsage'?: number;
  'amount'?: number;
  'amountDecimal'?: number;
  'billingScheme'?: string;
  'created'?: number;
  'currency'?: string;
  'interval'?: string;
  'intervalCount'?: number;
  'livemode'?: boolean;
  'metadata'?: SubscriptionGetResponseItemsPlanMetadata;
  'nickname'?: string;
  'product'?: string;
  'tiers'?: Array<SubscriptionGetResponseItemsPlanTiers>;
  'tiersMode'?: string;
  'transformUsage'?: SubscriptionGetResponseItemsPlanTransformUsage;
  'trialPeriodDays'?: number;
  'usageType'?: string;

  static readonly discriminator: string | undefined = undefined;

  static readonly attributeTypeMap: Array<{
    name: string;
    baseName: string;
    type: string;
    format: string;
  }> = [
    {
      name: 'id',
      baseName: 'id',
      type: 'string',
      format: '',
    },
    {
      name: 'object',
      baseName: 'object',
      type: 'string',
      format: '',
    },
    {
      name: 'active',
      baseName: 'active',
      type: 'boolean',
      format: '',
    },
    {
      name: 'aggregateUsage',
      baseName: 'aggregate_usage',
      type: 'number',
      format: '',
    },
    {
      name: 'amount',
      baseName: 'amount',
      type: 'number',
      format: '',
    },
    {
      name: 'amountDecimal',
      baseName: 'amount_decimal',
      type: 'number',
      format: '',
    },
    {
      name: 'billingScheme',
      baseName: 'billing_scheme',
      type: 'string',
      format: '',
    },
    {
      name: 'created',
      baseName: 'created',
      type: 'number',
      format: '',
    },
    {
      name: 'currency',
      baseName: 'currency',
      type: 'string',
      format: '',
    },
    {
      name: 'interval',
      baseName: 'interval',
      type: 'string',
      format: '',
    },
    {
      name: 'intervalCount',
      baseName: 'interval_count',
      type: 'number',
      format: '',
    },
    {
      name: 'livemode',
      baseName: 'livemode',
      type: 'boolean',
      format: '',
    },
    {
      name: 'metadata',
      baseName: 'metadata',
      type: 'SubscriptionGetResponseItemsPlanMetadata',
      format: '',
    },
    {
      name: 'nickname',
      baseName: 'nickname',
      type: 'string',
      format: '',
    },
    {
      name: 'product',
      baseName: 'product',
      type: 'string',
      format: '',
    },
    {
      name: 'tiers',
      baseName: 'tiers',
      type: 'Array<SubscriptionGetResponseItemsPlanTiers>',
      format: '',
    },
    {
      name: 'tiersMode',
      baseName: 'tiers_mode',
      type: 'string',
      format: '',
    },
    {
      name: 'transformUsage',
      baseName: 'transform_usage',
      type: 'SubscriptionGetResponseItemsPlanTransformUsage',
      format: '',
    },
    {
      name: 'trialPeriodDays',
      baseName: 'trial_period_days',
      type: 'number',
      format: '',
    },
    {
      name: 'usageType',
      baseName: 'usage_type',
      type: 'string',
      format: '',
    },
  ];

  static getAttributeTypeMap() {
    return SubscriptionGetResponseItemsPlan.attributeTypeMap;
  }

  public constructor() {}
}
