/**
 * Shifter API
 * Shifter API
 *
 * OpenAPI spec version: latest
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { SubscriptionGetResponseBillingThresholds } from './SubscriptionGetResponseBillingThresholds';
import { SubscriptionGetResponseDefaultTaxRates } from './SubscriptionGetResponseDefaultTaxRates';
import { SubscriptionGetResponseInvoiceCustomerBalanceSettings } from './SubscriptionGetResponseInvoiceCustomerBalanceSettings';
import { SubscriptionGetResponseItems } from './SubscriptionGetResponseItems';
import { SubscriptionGetResponsePauseCollection } from './SubscriptionGetResponsePauseCollection';
import { SubscriptionGetResponsePendingInvoiceItemInterval } from './SubscriptionGetResponsePendingInvoiceItemInterval';
import { SubscriptionGetResponsePendingUpdate } from './SubscriptionGetResponsePendingUpdate';
import { SubscriptionGetResponseTransferData } from './SubscriptionGetResponseTransferData';
import { HttpFile } from '../http/http';

export class SubscriptionGetResponse {
  'id'?: string;
  'object'?: string;
  'applicationFeePercent'?: number;
  'billing'?: string;
  'billingCycleAnchor'?: number;
  'billingThresholds'?: SubscriptionGetResponseBillingThresholds;
  'cancelAt'?: number;
  'cancelAtPeriodEnd'?: number;
  'canceledAt'?: number;
  'collectionMethod'?: string;
  'created'?: number;
  'currentPeriodEnd'?: number;
  'currentPeriodStart'?: number;
  'customer'?: string;
  'daysUntilDue'?: number;
  'defaultPaymentMethod'?: string;
  'defaultSource'?: string;
  'defaultTaxRates'?: Array<SubscriptionGetResponseDefaultTaxRates>;
  'discount'?: { [key: string]: any };
  'endedAt'?: number;
  'invoiceCustomerBalanceSettings'?: SubscriptionGetResponseInvoiceCustomerBalanceSettings;
  'items'?: SubscriptionGetResponseItems;
  'latestInvoice'?: string;
  'livemode'?: boolean;
  'metadata'?: { [key: string]: any };
  'nextPendingInvoiceItemInvoice'?: number;
  'pauseCollection'?: SubscriptionGetResponsePauseCollection;
  'pendingInvoiceItemInterval'?: SubscriptionGetResponsePendingInvoiceItemInterval;
  'pendingSetupIntent'?: string;
  'pendingUpdate'?: SubscriptionGetResponsePendingUpdate;
  /**
   * Form of data is the same as the data.Items
   */
  'plan'?: { [key: string]: any };
  'quantity'?: number;
  'schedule'?: number;
  'start'?: number;
  'startDate'?: number;
  'status'?: string;
  'taxPercent'?: number;
  'transferData'?: SubscriptionGetResponseTransferData;
  'trialEnd'?: number;
  'trialStart'?: number;

  static readonly discriminator: string | undefined = undefined;

  static readonly attributeTypeMap: Array<{
    name: string;
    baseName: string;
    type: string;
    format: string;
  }> = [
    {
      name: 'id',
      baseName: 'id',
      type: 'string',
      format: '',
    },
    {
      name: 'object',
      baseName: 'object',
      type: 'string',
      format: '',
    },
    {
      name: 'applicationFeePercent',
      baseName: 'application_fee_percent',
      type: 'number',
      format: '',
    },
    {
      name: 'billing',
      baseName: 'billing',
      type: 'string',
      format: '',
    },
    {
      name: 'billingCycleAnchor',
      baseName: 'billing_cycle_anchor',
      type: 'number',
      format: '',
    },
    {
      name: 'billingThresholds',
      baseName: 'billing_thresholds',
      type: 'SubscriptionGetResponseBillingThresholds',
      format: '',
    },
    {
      name: 'cancelAt',
      baseName: 'cancel_at',
      type: 'number',
      format: '',
    },
    {
      name: 'cancelAtPeriodEnd',
      baseName: 'cancel_at_period_end',
      type: 'number',
      format: '',
    },
    {
      name: 'canceledAt',
      baseName: 'canceled_at',
      type: 'number',
      format: '',
    },
    {
      name: 'collectionMethod',
      baseName: 'collection_method',
      type: 'string',
      format: '',
    },
    {
      name: 'created',
      baseName: 'created',
      type: 'number',
      format: '',
    },
    {
      name: 'currentPeriodEnd',
      baseName: 'current_period_end',
      type: 'number',
      format: '',
    },
    {
      name: 'currentPeriodStart',
      baseName: 'current_period_start',
      type: 'number',
      format: '',
    },
    {
      name: 'customer',
      baseName: 'customer',
      type: 'string',
      format: '',
    },
    {
      name: 'daysUntilDue',
      baseName: 'days_until_due',
      type: 'number',
      format: '',
    },
    {
      name: 'defaultPaymentMethod',
      baseName: 'default_payment_method',
      type: 'string',
      format: '',
    },
    {
      name: 'defaultSource',
      baseName: 'default_source',
      type: 'string',
      format: '',
    },
    {
      name: 'defaultTaxRates',
      baseName: 'default_tax_rates',
      type: 'Array<SubscriptionGetResponseDefaultTaxRates>',
      format: '',
    },
    {
      name: 'discount',
      baseName: 'discount',
      type: '{ [key: string]: any; }',
      format: '',
    },
    {
      name: 'endedAt',
      baseName: 'ended_at',
      type: 'number',
      format: '',
    },
    {
      name: 'invoiceCustomerBalanceSettings',
      baseName: 'invoice_customer_balance_settings',
      type: 'SubscriptionGetResponseInvoiceCustomerBalanceSettings',
      format: '',
    },
    {
      name: 'items',
      baseName: 'items',
      type: 'SubscriptionGetResponseItems',
      format: '',
    },
    {
      name: 'latestInvoice',
      baseName: 'latest_invoice',
      type: 'string',
      format: '',
    },
    {
      name: 'livemode',
      baseName: 'livemode',
      type: 'boolean',
      format: '',
    },
    {
      name: 'metadata',
      baseName: 'metadata',
      type: '{ [key: string]: any; }',
      format: '',
    },
    {
      name: 'nextPendingInvoiceItemInvoice',
      baseName: 'next_pending_invoice_item_invoice',
      type: 'number',
      format: '',
    },
    {
      name: 'pauseCollection',
      baseName: 'pause_collection',
      type: 'SubscriptionGetResponsePauseCollection',
      format: '',
    },
    {
      name: 'pendingInvoiceItemInterval',
      baseName: 'pending_invoice_item_interval',
      type: 'SubscriptionGetResponsePendingInvoiceItemInterval',
      format: '',
    },
    {
      name: 'pendingSetupIntent',
      baseName: 'pending_setup_intent',
      type: 'string',
      format: '',
    },
    {
      name: 'pendingUpdate',
      baseName: 'pending_update',
      type: 'SubscriptionGetResponsePendingUpdate',
      format: '',
    },
    {
      name: 'plan',
      baseName: 'plan',
      type: '{ [key: string]: any; }',
      format: '',
    },
    {
      name: 'quantity',
      baseName: 'quantity',
      type: 'number',
      format: '',
    },
    {
      name: 'schedule',
      baseName: 'schedule',
      type: 'number',
      format: '',
    },
    {
      name: 'start',
      baseName: 'start',
      type: 'number',
      format: '',
    },
    {
      name: 'startDate',
      baseName: 'start_date',
      type: 'number',
      format: '',
    },
    {
      name: 'status',
      baseName: 'status',
      type: 'string',
      format: '',
    },
    {
      name: 'taxPercent',
      baseName: 'tax_percent',
      type: 'number',
      format: '',
    },
    {
      name: 'transferData',
      baseName: 'transfer_data',
      type: 'SubscriptionGetResponseTransferData',
      format: '',
    },
    {
      name: 'trialEnd',
      baseName: 'trial_end',
      type: 'number',
      format: '',
    },
    {
      name: 'trialStart',
      baseName: 'trial_start',
      type: 'number',
      format: '',
    },
  ];

  static getAttributeTypeMap() {
    return SubscriptionGetResponse.attributeTypeMap;
  }

  public constructor() {}
}
