/**
 * Shifter API
 * Shifter API
 *
 * The version of the OpenAPI document: latest
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';
import { StatusGetResponseUserGroup } from './statusGetResponseUserGroup';
import { StatusGetResponseUserNotification } from './statusGetResponseUserNotification';

/**
 * Account status. This properties only reflect for Legacy Plan.
 */
export class StatusGetResponseUser {
  /**
   * Payment method status of the account. [Registered]- Account has payment method. [unRegistered]- Account does not register payment method yet.
   */
  'creditCardStatus'?: string;
  /**
   * Maximum number of the sites
   */
  'upperLimitProjects'?: number;
  /**
   * Limit of maximum storage.
   */
  'maxTransferGb'?: number;
  /**
   * Limit of maximum data transfer quota
   */
  'maxDiskGb'?: number;
  /**
   * Whether domain feature is available or not
   */
  'domainSetting'?: string;
  /**
   * (deprecated)
   */
  'importArchives'?: string;
  /**
   * (deprecated)
   */
  'exportArchives'?: string;
  'backup'?: number;
  /**
   * (deprecated)
   */
  'enableSubuser'?: string;
  'notification'?: StatusGetResponseUserNotification;
  /**
   * ID of the current plan. (only Legacy plan)
   */
  'planId'?: string;
  'group'?: StatusGetResponseUserGroup;

  static discriminator: string | undefined = undefined;

  static attributeTypeMap: Array<{
    name: string;
    baseName: string;
    type: string;
  }> = [
    {
      name: 'creditCardStatus',
      baseName: 'credit_card_status',
      type: 'string',
    },
    {
      name: 'upperLimitProjects',
      baseName: 'upper_limit_projects',
      type: 'number',
    },
    {
      name: 'maxTransferGb',
      baseName: 'max_transfer_gb',
      type: 'number',
    },
    {
      name: 'maxDiskGb',
      baseName: 'max_disk_gb',
      type: 'number',
    },
    {
      name: 'domainSetting',
      baseName: 'domain_setting',
      type: 'string',
    },
    {
      name: 'importArchives',
      baseName: 'import_archives',
      type: 'string',
    },
    {
      name: 'exportArchives',
      baseName: 'export_archives',
      type: 'string',
    },
    {
      name: 'backup',
      baseName: 'backup',
      type: 'number',
    },
    {
      name: 'enableSubuser',
      baseName: 'enable_subuser',
      type: 'string',
    },
    {
      name: 'notification',
      baseName: 'notification',
      type: 'StatusGetResponseUserNotification',
    },
    {
      name: 'planId',
      baseName: 'plan_id',
      type: 'string',
    },
    {
      name: 'group',
      baseName: 'group',
      type: 'StatusGetResponseUserGroup',
    },
  ];

  static getAttributeTypeMap() {
    return StatusGetResponseUser.attributeTypeMap;
  }
}
